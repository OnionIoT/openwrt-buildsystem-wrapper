#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#  SPDX-License-Identifier: MIT-0
version: 0.2
env:
  variables:
    FORCE_UNSAFE_CONFIGURE: 1
    ROOT_PATH: "/openwrt"
phases:
  install:
    commands:
      - echo "Installing dependencies"
      - apt-get update
      - apt -y install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget python3
      - apt -y install --upgrade awscli
      # remove pyenv from path to use the default system installation.
      - export PATH=$(echo $PATH | sed 's@/root/.pyenv/shims:/root/.pyenv/bin:@@g')
  pre_build:
    commands:
      - mkdir -p $ROOT_PATH
      - cp -r $CODEBUILD_SRC_DIR/. $ROOT_PATH
      - mkdir -p $ROOT_PATH/keys
      - aws s3 cp s3://onion-build/openwrt/openwrt21.key $ROOT_PATH/keys/key-build
      - aws s3 cp s3://onion-build/openwrt/openwrt21.pub $ROOT_PATH/keys/key-build.pub

  build:
    commands:
      - cd $ROOT_PATH
      - bash build.sh
  post_build:
    commands:
      - if [ "$CODEBUILD_BUILD_SUCCEEDING" = "0" ]; then echo ">>> VERBOSE DEBUG BUILD"; bash build.sh -V ; exit 1; fi

      - cd $ROOT_PATH
      - BUILD_DATE=$(date +%Y%m%d-%H%M%S)

      - echo "Copying Packages"
      - cd "$ROOT_PATH/openwrt/bin/packages/mipsel_24kc"
      - aws s3 cp --recursive . "s3://$OUTPUT_BUCKET/builds/$RELEASE_VERSION/$BUILD_DATE/packages/mipsel_24kc/"

      - echo "Copying Binaries"
      - cd "$ROOT_PATH/openwrt/bin/targets/ramips/mt76x8"
      - aws s3 cp --recursive . "s3://$OUTPUT_BUCKET/builds/$RELEASE_VERSION/$BUILD_DATE/targets/ramips/mt76x8/"

cache:
  paths:
    - /var/cache/apt/**/*
    - /var/lib/apt/lists/**/*

artifacts:
  type: zip
  files:
    - "packages/mipsel_24kc/**/*"
    - "targets/ramips/mt76x8/**/*"
  base-directory: "$ROOT_PATH/openwrt/bin"
